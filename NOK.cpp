#include <iostream>

using namespace std;

// Функция для вычисления НОД (наибольший общий делитель) с использованием рекурсии
long long NOD(long long a, long long b) {
    if (b == 0) return a; // Если b равен 0, возвращаем a как НОД
    return NOD(b, a % b); // Рекурсивный вызов для вычисления НОД
}

// Функция для вычисления НОК (наибольшее общее кратное) с использованием типа __int128
__int128 NOK(long long m, long long n) {
    long long nod = NOD(m, n); // Находим НОД
    return (__int128)m / nod * n; // Вычисляем НОК, чтобы избежать переполнения
}

// Функция для вывода значений типа __int128
void printInt128(__int128 value) {
    if (value == 0) {
        cout << "0"; // Если значение равно 0, выводим 0
        return;
    }
    string result; // Строка для хранения результата
    while (value > 0) {
        result = char('0' + value % 10) + result; // Получаем цифры и формируем строку
        value /= 10; // Уменьшаем значение
    }
    cout << result; // Выводим результат
}

int main() {
    setlocale(LC_ALL, "RU"); // Устанавливаем локаль для вывода на русском
    cout << "Здравствуйте, эта программа вычисляет НОК чисел m и n(m,n >= 10^11)." << endl << endl;
    long long m, n; // Объявление переменных для хранения входных чисел

    // Ввод числа m
    cout << "Введите число m: ";
    cin >> m;
    while (m < 100000000000LL) { // Проверка на минимальное значение
        cout << "Число m должно быть больше или равно 10^11 !!!\nПожалуйста попробуйте снова." << endl;
        cout << "Введите число m: ";
        cin >> m; // Повторный ввод
    }

    // Ввод числа n
    cout << "Введите число n: ";
    cin >> n;
    while (n < 100000000000LL) { // Проверка на минимальное значение
        cout << "Число n должно быть больше или равно 10^11 !!!\nПожалуйста попробуйте снова." << endl;
        cout << "Введите число n: ";
        cin >> n; // Повторный ввод
    }

    // Вычисление НОД и НОК
    long long res1 = NOD(m, n); // Вычисляем НОД
    __int128 res = NOK(m, n); // Вычисляем НОК
    // cout << "НОД чисел m = " << m << " и n = " << n << " равен: " << res1 << endl; // Выводим НОД
    cout << "НОК чисел m = " << m << " и n = " << n << " равен: "; // Подготовка к выводу НОК
    printInt128(res); // Выводим НОК
    cout << endl;

    return 0; // Завершение программы
}
